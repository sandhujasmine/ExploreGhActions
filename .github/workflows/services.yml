name: Print Github Env Variables
on:
  pull_request:
    # run CI after merged into main
    types:
      - closed
  push:
    branches:
      # when PR is merged into main, it is a push event but 
      # GITHUB_REF now becomes:refs/heads/main but now we need GITHUB_HEAD_REF services/<name> 
      - 'services/**'
  workflow_dispatch:

jobs:
  installer_name:
    name: Set installler_name
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (contains( github.head_ref, 'services') && github.event.pull_request.merged == true)
    outputs:
      installer_name: ${{ steps.leaf1.outputs.branch || steps.leaf2.outputs.branch }}
    steps:
      - name: Leaf of branch on push
        if: github.event_name == 'push'
        env:
          # github.event_name == 'push', use github.ref_name since github.head_ref is empty
          # github.event_name == 'pull_request', use github.head_ref since github.ref_name is main 
          # which is not what we want!
          # github.ref and github.ref_name appear to be the same on push events
          #
          # NOTE: we could do the following and omit the 'Leaf on pull_request' but that seems
          # brittle, ie:  BRANCH: ${{ github.head_ref || github.ref }}
          #
          BRANCH: ${{ github.ref }}
        id: leaf1
        run: echo "branch=${BRANCH##*/}" >> $GITHUB_OUTPUT
      - name: Leaf on pull_request
        if: github.event_name == 'pull_request'
        env:
          BRANCH: ${{ github.head_ref }}
        id: leaf2
        run: echo "branch=${BRANCH##*/}" >> $GITHUB_OUTPUT
      - name: echo event name
        run: |
          echo "GITHUB_EVENT_NAME: " ${{ github.event_name }}
  svc_installer:
    # run on all push events or pull_request events if source branch is services/
    # on pull_request event github.head_ref must be defined
    name: Setup svc installler
    uses: ./.github/workflows/svc-installer.yml
    needs: installer_name
    with:
      INSTALLER_NAME: ${{ needs.installer_name.outputs.installer_name }}
