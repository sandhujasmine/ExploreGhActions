name: Example reusable workflow

on:
  workflow_call:
    inputs:
      INSTALLER_NAME:
        description: 'Name of the installer (e.g., Anaconda3, Miniconda3)'
        type: 'string'
        required: true
      ENVIRONMENT:
        # NOTE: test/added-files is simulating main
        description: 'Name of the secrets environment'
        #default: |
        #  (((github.ref == 'refs/heads/main' || github.ref == 'refs/heads/devel' || startsWith(github.ref, 'refs/tags')) && 'prod') || \
        #   ((startsWith( github.head_ref, 'services/') && github.event.pull_request.merged == true && github.base_ref == 'fake-main') && \
        #     'svc_merged_into_main') || 'dev')
        default: ${{ (
          ((github.ref == 'refs/heads/main' ||
            startsWith(github.ref, 'refs/tags')) && 'prod') ||
          ((startsWith( github.head_ref, 'services/') && github.event.pull_request.merged == true &&
            github.base_ref == 'fake-main') && 'svc_merged_into_main') ||
            'dev')
          }}
        type: 'string'
        required: false

jobs:
  print_env_vars:
    name: Print Github Variables
    runs-on: ubuntu-latest
    steps:
      - name: Print Github Variables
        run: |
          echo
          echo "ENVIRONMENT: " ${{ inputs.ENVIRONMENT }}
          echo
          echo "installer_name: " ${{ inputs.INSTALLER_NAME }}
          echo
          echo "GITHUB_REF:$GITHUB_REF"
          echo "GITHUB_HEAD_REF:$GITHUB_HEAD_REF"
          echo
          echo "From github.ref:" ${{ github.ref}}
          echo "From github.head_ref:" ${{ github.head_ref }}
          echo "From github.base_ref:" ${{ github.base_ref }}
          echo "From github.event_name:" ${{ github.event_name }}
          echo
          echo "GITHUB_SHA:$GITHUB_SHA"
          echo "GITHUB_WORKFLOW:$GITHUB_WORKFLOW"
          echo "GITHUB_EVENT_NAME:$GITHUB_EVENT_NAME"
          echo "GITHUB_EVENT_PATH:$GITHUB_EVENT_PATH"
          echo "GITHUB_WORKSPACE:$GITHUB_WORKSPACE"
          echo "Add a line so we can see the event_name"

      - name: Print on push
        if: ((github.event_name == 'pull_request') ||
            (github.event_name == 'push' && contains(github.ref, 'refs/tags/'))
            )
        run: |
          echo "From github.event_name:" ${{ github.event_name }}
          echo
          echo "GITHUB_EVENT_NAME:$GITHUB_EVENT_NAME"
          echo
      - name: s3-upload-location
        id: s3_folder
        run: |
          if ${{ startsWith(github.ref, 'refs/tags') }}; then
            echo "$GITHUB_REF starts with refs/tags"
            FOLDER=envs/${GITHUB_REF#refs/tags/}
          else
            echo "$GITHUB_REF does not start with refs/tags"
            HASH=$(git rev-parse --short "${GITHUB_SHA}")
            FOLDER=build/envs/$HASH
          fi
          # echo "Try in bash only ... "
          # if [[ "$GITHUB_REF" =~ ^refs/tags ]]; then
          #   FOLDER=envs/${GITHUB_REF#refs/tags/}
          # else
          #   HASH=$(git rev-parse --short "${GITHUB_SHA}")
          #   FOLDER=build/envs/$HASH
          # fi
          echo "GITHUB_REF: ${GITHUB_REF}""
          echo "FOLDER: ${FOLDER}""
        shell: bash

      - name: Print complete webhook event payload
        run: cat $GITHUB_EVENT_PATH
