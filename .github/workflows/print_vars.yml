name: Test workflow that sets env vars
on:
  pull_request:
    # when PR is merged into main, it is a push event; however,
    # GITHUB_REF changes to refs/heads/main so we need GITHUB_HEAD_REF services/<name>
    # Therefore, use this to run workflow after merge into main
    types:
      - closed
  push:
    branches:
      - 'services/**'

  workflow_dispatch:

env:
  VAR1: 'var_1'

jobs:
    print_vars:
      name: ${{ matrix.INSTALLER.OS_NAME }}-${{ matrix.INSTALLER.ARCH }}-${{ matrix.INSTALLER.EXT }}
      runs-on: ${{ matrix.INSTALLER.OS }}
      env:
        BUILD_DIR: installer
        NEW_DIR: ${BUILD_DIR}
      strategy:
        fail-fast: false
        matrix:
          INSTALLER: [
              # {
              #   "OS": "windows-latest",
              #   "ARCH": "x86_64",
              #   "EXT": "exe",
              #   "OS_NAME": "Windows"
              # },
              {
                "OS": "ubuntu-latest",
                "ARCH": "x86_64",
                "EXT": "sh",
                "OS_NAME": "Linux"
              }
            ]
      steps:
        - name: Replace token for sh installers (Linux, OSX)
          if: contains(matrix.INSTALLER.EXT, 'sh')
          env:
            BUILD_PATH: ${{runner.temp}}/${{env.BUILD_DIR}}
          run: |
            import os
            var = os.environ['VAR1']
            print(f"var1: {var}")
            build_dir = os.environ['BUILD_DIR']
            new_dir = os.environ['NEW_DIR']
            print(f"new_dir: {new_dir}")
          shell: python

    print_env_vars:
      if: false
      name: Print env vars
      # Ensure if it runs, the ENVIRONMENT is 'dev'
      #if: github.event_name == 'push' || (startsWith( github.head_ref, 'services/') && github.event.pull_request.merged == true)
      uses: ./.github/workflows/svc-installer.yml
      with:
        INSTALLER_NAME: "Test"
