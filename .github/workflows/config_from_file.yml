name: Services installer

on:
  workflow_call:
    inputs:
      PRODUCT_DIR:
        description: 'Location of files (config, recipe, ..)'
        type: 'string'
        required: true

jobs:
    get_config:
        name: Load config from config.json
        runs-on: ubuntu-latest
        outputs:
          installer_name: ${{ steps.load_from_config.outputs.installer_name }}
          installer_version: ${{ steps.load_from_config.outputs.installer_version }}
          matrix_py_ver: ${{ steps.load_from_config.outputs.matrix_py_ver }}
          matrix_installer: ${{ steps.load_from_config.outputs.matrix_installer }}
        env:
          CONFIG_JSON: ${PRODUCT_DIR}/config.json
        steps:
          - name: Checkout code
            uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9  # v3
            with:
              sparse-checkout: ${CONFIG_JSON}
          - name: Load env vars and build matrix from config
            id: load_from_config
            run: |
              # print input vars
              echo "PRODUCT_DIR: " ${PRODUCT_DIR}
              echo "CONFIG_JSON: " ${CONFIG_JSON}
              for file in ${PRODUCT_DIR}; do
                echo "FOUND - " ${file}
              done
              # do not set if installer_name or installer_version is 'null'
              INST_NAME=$(jq -rc '.installer_name | select( . != null )' ${CONFIG_JSON})
              echo "installer_name=$INST_NAME" >> $GITHUB_OUTPUT
              INST_VER=$(jq -rc '.installer_version | select( . != null )' ${CONFIG_JSON})
              echo "installer_version=$INST_VER" >> $GITHUB_OUTPUT
              echo matrix_installer=$(jq -c '.target_platforms' ${CONFIG_JSON} | \
                xargs -I {} jq -c '.[] | select(.TARGET_PLATFORM | inside("{}"))' products/services/matrix.json | \
                jq -s '.') >> $GITHUB_OUTPUT
              echo matrix_py_ver=$(jq -c '.py_ver' ${CONFIG_JSON} ) >> $GITHUB_OUTPUT
    print_config_vars:
        name: Print vars loaded from config.json
        runs-on: ubuntu-latest
        needs: get_config
        strategy:
          fail-fast: false
          matrix:
            PY_VER: ${{ fromJson(needs.get_config.outputs.matrix_py_ver) }}
            INSTALLER: ${{ fromJSON(needs.get_config.outputs.matrix_installer) }}
        steps:
          - name: Print config variables
            run: |
              echo "INSTALLER_NAME: " ${{ needs.get_config.outputs.installer_name }}
              echo "INSTALLER_VERSION: " ${{ needs.get_config.outputs.installer_version }}
              echo "PRODUCT_DIR: " ${PRODUCT_DIR}
              echo "MATRIX_PY_VER: " ${{ matrix.PY_VER }}
              echo "MATRIX_INSTALLERS: " ${{ matrix.INSTALLER }}