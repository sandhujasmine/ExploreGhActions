name: Services installer

on:
  workflow_call:
    inputs:
      INSTALLER_NAME:
        description: 'Name of the installer (e.g., Anaconda3, Miniconda3)'
        type: 'string'
        required: true
      ENVIRONMENT:
        # NOTE: test/added-files is simulating main
        description: 'Name of the secrets environment'
        default: (((github.ref == 'refs/heads/main' || github.ref == 'refs/heads/devel' ||
                    startsWith(github.ref, 'refs/tags')) && 'prod') ||
                  (startsWith( github.head_ref, 'services/') &&
                   github.event.pull_request.merged == true &&
                   github.base_ref == 'fake-main' && 'svc_merged_into_main') ||
                   'dev')
        type: 'string'
        required: false

jobs:
  print_env_vars:
    name: Print Github Variables
    runs-on: ubuntu-latest
    steps:
      - name: Print Github Variables
        run: |
          echo
          echo "ENVIRONMENT: " ${{ inputs.ENVIRONMENT }}
          echo
          echo "installer_name: " ${{ inputs.INSTALLER_NAME }}
          echo
          echo "GITHUB_REF:$GITHUB_REF"
          echo "GITHUB_HEAD_REF:$GITHUB_HEAD_REF"
          echo "GITHUB_SHA:$GITHUB_SHA"
          echo "GITHUB_WORKFLOW:$GITHUB_WORKFLOW"
          echo "GITHUB_EVENT_NAME:$GITHUB_EVENT_NAME"
          echo "GITHUB_EVENT_PATH:$GITHUB_EVENT_PATH"
          echo "GITHUB_WORKSPACE:$GITHUB_WORKSPACE"
          echo
          echo "From GITHUB_REF:" ${{ github.ref}}
          echo "From GITHUB_HEAD_REF: ${{ github.head_ref }}
          echo "From GITHUB_BASE_REF: ${{ github.base_ref }}

      - name: Print complete webhook event payload
        run: cat $GITHUB_EVENT_PATH
