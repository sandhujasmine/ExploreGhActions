#
#
name: Bump version, build release package, create PR
on:
  workflow_dispatch:
    inputs:
        package:
          description: "build & upload release version of this package" 
          required: true
          type: choice
          options:
            - "pkg1"
            - "agents/agent1"
        debug:
          description: 'ssh session to debug'
          required: false
          type: boolean

permissions:
  contents: write
  pull-requests: write

jobs:
  build_config:
    name: Bump release version
    runs-on: ubuntu-latest
    environment: dev
    steps:
    - name: Retrieve the source code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Install commitizen; prepare git for commiting
      id: config_tools
      run: |
        # simpler to use pip - couldn't figure out how to use conda env
        pip install commitizen
        git config --global user.email "you@example.com"
        git config --global user.name "PR-bot"
    - name: get short git hash; install commitizen
      id: get_version
      env:
        PKG_PATH: ${{ github.event.inputs.package }}
      run: |
        set -euxo pipefail
        echo "SHORT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        PKG_NAME=${PKG_PATH##*/}
        echo "PKG_NAME=$PKG_NAME" >> $GITHUB_OUTPUT
      shell: bash
    #- name: bump version
    #  env:
    #    GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #    PARENT_HASH: ${{ steps.get_version.outputs.SHORT_HASH }}
    #    PKG_NAME: ${{ steps.get_version.outputs.PKG_NAME }}
    #  run: |
    #    set -euxo pipefail
    #    BRANCH=release/${{ github.event.inputs.package }}-${PARENT_HASH}
    #    TITLE=$BRANCH
    #    BODY="- Created by manual trigger; branched at ${PARENT_HASH}"

    #    git checkout -b $BRANCH
    #    cd ${{ github.event.inputs.package }}
    #    echo "Bump version in branch and create PR"
    #    cz bump --yes -ch

    #    echo "Open a PR for ${BRANCH}"
    #    git push -u origin $BRANCH
    #    gh pr create -B main --title "$TITLE" --body "$BODY" --label "release" --label "automation"
    #  shell: bash
    - name: bump version
      run: |
        set -euxo pipefail
        cd ${{ github.event.inputs.package }}
        echo "Bump version .."
        cz bump --yes -ch

        # Env vars to be consumed by create-pull-request action
        echo "BRANCH=release/${{ steps.get_version.outputs.PKG_NAME }}-${{ steps.get_version.outputs.SHORT_HASH }}" >> $GITHUB_ENV
        echo "TITLE=ci(release): release package ${{ steps.get_version.outputs.PKG_NAME }}" >> $GITHUB_ENV
        echo "BODY_L1=Created PR to bump version & release ${{ steps.get_version.outputs.PKG_NAME }}" >> $GITHUB_ENV
      shell: bash
    - name: test cpr
      id: cpr
      uses: peter-evans/create-pull-request@v7
      with:
        # context is for creating a PR where base is main.
        #   github.head_ref - name of the branch that has been merged
        #   github.event.number - # of the PR that was just merged
        branch: ${{ env.BRANCH }}
        title: ${{ env.title }}
        body: |
          - ${{ env.BODY_L1 }}
          - Automated changes by [create-pull-request](https://github.com/peter-evans/create-pull-request) GitHub action
        labels: |
          automation
          release
    - name: Debug
      if: ${{ github.event.inputs.debug == 'true' || failure()  }}
      uses: mxschmitt/action-tmate@v3